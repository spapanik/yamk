["$globals"]
version = "8.1"

["$globals".vars]
echo = "echo"

[phony]
phony = true


[two_commands]
phony = true
commands = [
    "ls",
    "echo 42",
]


[echo]
phony = true
echo = true
commands = [
    "ls -l",
]

[echo_in_command]
phony = true
commands = [
    "[echo]ls",
]

[requirement_ext]
phony = true
requires = [
    "${EXT_VARIABLE}",
]
commands = [
    "echo '${.requirements}'",
]

['regex_requirement_(?P<special_value>[a-z]+)']
regex = true
phony = true
requires = [
    "${special_value}",
]
commands = [
    "echo '${.requirements}'",
]

[requirement_local]
phony = true
requires = [
    "${local_variable}",
]
vars = { local_variable = "echo" }
commands = [
    "echo '${.requirements}'",
]

[requirement]
phony = true
requires = [
    "${echo}",
]
commands = [
    "echo '${.requirements}'",
]

[alias]
alias = "two_commands"

['regex[-_](?P<number>[^.]\d+)']
phony = true
regex = true
commands = [
    "echo ${number}",
]


[multiple_regex]
phony = true
requires = [
    "file_42.txt",
    "file_1024.txt",
]

['file_(?P<number>[^.]\d+).txt']
regex = true
commands = [
    "ls file_${number}.txt",
]

['echo_(?P<number>\d+)']
regex = true
phony = true
commands = [
    "echo ${number}",
]

[echo_42]
phony = true
commands = [
    "echo 'The answer to life, the universe, and everything'",
]

[phony_requirement]
phony = true
commands = [
    "ls",
]

[requires]
phony = true
requires = [
    "/",
    "phony_requirement",
]
commands = [
    "true",
]

[keep_ts]
phony = true
keep_ts = true
requires = [
    ".yamk",
]
commands = [
    "ls",
]

[exists_only]
exists_only = true
commands = [
    "ls",
]

[existence_command]
phony = true
exists_only = true
existence_check = { command = "sub", stdout = "yoink" }
commands = [
    "ls",
]

[requires_build]
requires = [
    "keep_ts",
]
commands = [
    "echo 42",
]

[dir]
exists_only = true
recursive = true

[recursive_requirement]
requires = [
    "dir",
]
commands = [
    "ls",
]

[inner_one]
phony = true
commands = [
    "echo one",
]

[inner_two]
phony = true
commands = [
    "echo two",
]

[nested_requires]
phony = true
requires = [
    "${requirements}",
]

[nested_requires.vars]
requirements = [
    "inner_one",
    "inner_two",
]
