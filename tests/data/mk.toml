["$globals"]
vars = [
    {"[weak]prefix" = "/home/user/.config/"},
    {dir = "/etc"},
    {conf_dir = "service.d"},
    {filename = "generic.conf"},
    {name = "call"},
]

[phony]
phony = true

[missing_requirement]
phony = true
requires = [
    "missing_target",
]

[two_commands]
phony = true
commands = [
    "ls",
    "echo 42",
]

[variables]
phony = true
vars = [
    {"[weak]conf_dir" = "/path/to/local/conf"},
    {filename = "service.conf"}
]
commands = [
    "echo ${prefix}${dir}/${conf_dir}/${filename}",
]

[failure]
phony = true
commands = [
    "false",
    "ls"
]

[allowed_failure]
phony = true
allow_failures = true
commands = [
    "false",
    "ls",
]

[allowed_failure_in_command]
phony = true
commands = [
    "[allow_failures]false",
]

[echo]
phony = true
echo = true
commands = [
    "ls -l",
]

[echo_in_command]
phony = true
commands = [
    "[echo]ls",
]

[alias]
alias = "two_commands"

["${name}"]
alias = "two_commands"

['regex[-_](?P<number>[^.]\d+)']
phony = true
regex = true
commands = [
    "echo ${number}",
]

[multiple_regex]
phony = true
requires = [
    "file_42.txt",
    "file_1024.txt",
]

['file_(?P<number>[^.]\d+).txt']
regex = true
commands = [
    "ls file_${number}.txt",
]

[phony_requirement]
phony = true
commands = [
    "ls",
]

[requires]
phony = true
requires = [
    "/",
    "phony_requirement",
]
commands = [
    "true",
]

[implicit_vars]
phony = true
requires = [
    "/",
    "phony",
]
commands = [
    "echo ${.target}",
    "echo ${.requirements}",
]

[keep_ts]
phony = true
keep_ts = true
requires = [
    ".yamk",
]
commands = [
    "ls",
]

[dag_target_1]
phony = true
requires = ["dag_target_2", "dag_target_3", "dag_target_4"]
commands = ["echo ${.target}"]

[dag_target_2]
phony = true
requires = ["dag_target_5"]
commands = ["echo ${.target}"]

[dag_target_3]
phony = true
requires = ["dag_target_4", "dag_target_5"]
commands = ["echo ${.target}"]

[dag_target_4]
phony = true
commands = ["echo ${.target}"]

[dag_target_5]
phony = true
commands = ["echo ${.target}"]

[dag_target_no_c3_1]
phony = true
requires = ["dag_target_no_c3_2", "dag_target_no_c3_3", "dag_target_no_c3_4"]
commands = ["echo ${.target}"]

[dag_target_no_c3_2]
phony = true
requires = ["dag_target_no_c3_5"]
commands = ["echo ${.target}"]

[dag_target_no_c3_3]
phony = true
commands = ["echo ${.target}"]

[dag_target_no_c3_4]
phony = true
requires = ["dag_target_no_c3_3", "dag_target_no_c3_5"]
commands = ["echo ${.target}"]

[dag_target_no_c3_5]
phony = true
commands = ["echo ${.target}"]

[exists_only]
exists_only = true
commands = [
    "ls",
]

[requires_build]
requires = [
    "keep_ts",
]
commands = [
    "echo 42",
]

[dir]
exists_only = true
recursive = true

[recursive_requirement]
requires = [
    "dir",
]
commands = [
    "ls",
]

[sort_variable]
phony = true
vars = [
    {toml_files = "$((glob ./*.toml))"},
    {sorted_files = "$((sort '${toml_files}'))"}
]
commands = [
    "echo ${sorted_files}"
]

[sort_function]
phony = true
vars = [
    {sorted_files = "$((sort '$((glob ./*.toml))'))"}
]
commands = [
    "echo ${sorted_files}"
]

[ternary_if_true]
phony = true
vars = [
    {make_exists = "$((exists ./mk.toml))"},
    {number = "$((ternary_if '${make_exists}' 42 1024))"},
]
commands = [
    "echo ${number}"
]

[ternary_if_false]
phony = true
vars = [
    {make_exists = "$((exists ./mk.yaml))"},
    {number = "$((ternary_if '${make_exists}' 42 1024))"},
]
commands = [
    "echo ${number}"
]

[ternary_if_function]
phony = true
vars = [
    {number = "$((ternary_if '$((exists ./mk.toml))' 42 1024))"},
]
commands = [
    "echo ${number}"
]

[pwd]
phony = true
vars = [
    {pwd = "$((pwd))"},
]
commands = [
    "echo ${pwd}"
]

[substitute]
phony = true
vars = [
    {text = "$((sub old new 'the old version'))"}
]
commands = [
    "echo ${text}"
]

[inner_one]
phony = true
commands = [
    "echo one"
]

[inner_two]
phony = true
commands = [
    "echo two"
]

[nested_requires]
phony = true
vars = [
    {requirements = ["inner_one", "inner_two"]},
]
requires = [
    "${requirements}",
]

[merge]
phony = true
vars = [
    {first = ["one", "two"]},
    {second = ["three"]},
    {third = "four"},
    {all = "$((merge ${first} ${second} ${third}))"},
]
commands = [
    "echo ${all}"
]

[".d_override"]
phony = true
commands = [
    "echo base"
]
